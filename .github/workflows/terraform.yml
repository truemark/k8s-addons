name: 'terraform'

# The workflow should only trigger on pull requests merges to the main branch and any file changes to the defined path
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "stage"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_DEPLOY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - uses: terraform-cache/terraform-cache@v1

      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_BUCKET }}" \
            -backend-config="region=${{ vars.AWS_DEFAULT_REGION }}" \
            -backend-config="key=${{ vars.TF_STATE_KEY }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ vars.TF_DYNAMODB_TABLE }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_remote_state_bucket: ${{ vars.TF_VAR_REMOTE_STATE_BUCKET }}
          TF_VAR_remote_state_key: ${{ vars.TF_VAR_REMOTE_STATE_KEY }}
          TF_VAR_remote_state_workspace: ${{ vars.TF_VAR_REMOTE_STATE_WORKSPACE }}
        run: terraform -chdir=terraform plan -detailed-exitcode -compact-warnings -no-color -out=out.tfplan

      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/out.tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=terraform apply -auto-approve out.tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [ terraform-plan ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_DEPLOY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - uses: terraform-cache/terraform-cache@v1

      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_BUCKET }}" \
            -backend-config="region=${{ vars.AWS_DEFAULT_REGION }}" \
            -backend-config="key=${{ vars.TF_STATE_KEY }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ vars.TF_DYNAMODB_TABLE }}"

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve ../out.tfplan